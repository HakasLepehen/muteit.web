# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.

# –ù–∞–º –Ω—É–∂–Ω–æ —Å—Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –Ω–∞ –ø—É–ª –∏ –ø—É—à
#
# –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ GoDaddy –Ω—É–∂–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∞—Ç—å creadentials –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
# –∏ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ https://developer.godaddy.com/doc/endpoint/domains#/v1/recordAdd –¥–æ–±–∞–≤–∏—Ç—å github.ref = 'refs/heads/<branch_name>'


# –Ω—É–∂–Ω–æ <branch_name> –¥–æ—Å—Ç–∞—Ç—å –∏–∑ string –∏ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ dns –∑–∞–ø–∏—Å—å –≤–∏–¥–∞ <branch_name>.<domain_name>
# –µ—Å–ª–∏ –≤–µ—Ç–∫–∞ main —Ç–æ <branch_name> = muteitapp
# –ø–æ –∞–¥—Ä–µ—Å—É http://www.godaddy.com/v1/domains/{domain}/records –ø–µ—Ä–µ–¥–∞–µ–º json:  
# [
#   {
#     "data": "string", # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
#     "name": "string", # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ $domain
#     "port": 0,
#     "priority": 0,
#     "protocol": "string",
#     "service": "string",
#     "ttl": 0,
#     "type": "A", # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ 
#     "weight": 0
#   }
# ]

#env:
  # –ø—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π: MY_ENV_VAR: ${{ <expression> }} 
  # DOMAIN_NAME: ${{ <expression> }} # –ø–æ–ª—É—á–∞–µ–º –∏–∑ CNAME
  # BRANCH_NAME: ${{ <expression> }} # –ø–æ–ª—É—á–∞–µ–º –∏–∑ github.ref
  # GODADDY_API_CREDANTIAL: ${{ secrets.GODADDY_API_CREDANTIAL }} # –∑–∞—Ä–µ–≥–∞—Ç—å –Ω–∞ godaddy –∏ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event." #github.event_name - –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, push
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!" #runner.os - –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Å–∏ —Å–µ—Ä–≤–µ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ job'a, –Ω–∞–ø—Ä–∏–º–µ—Ä, Linux
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}." #github.ref - –≤–µ—Ç–∫–∞, —Å –∫–æ—Ç–æ—Ä–æ–π –º—ã –∑–∞–ø—É—à–∏–ª–∏ –∏ github.repository - —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - name: Check out repository code #–ø—Ä–æ—Å—Ç–æ –∏–º—è, –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner." #github.repository - —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
  
  Check-List-files-in-repository:
    runs-on: macOS-latest
      - name: List files in the repository
      steps:
        run: |
          ls ${{ github.workspace }} 
      - run: echo "üçè This job's status is ${{ job.status }}." #job.status - —Å—Ç–∞—Ç—É—Å Job'—ã
  